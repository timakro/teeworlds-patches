diff --git a/src/base/system.c b/src/base/system.c
index b4bc6fb..74f1a69 100644
--- a/src/base/system.c
+++ b/src/base/system.c
@@ -1848,6 +1848,15 @@ int str_toint(const char *str) { return atoi(str); }
 float str_tofloat(const char *str) { return atof(str); }
 
 
+int str_utf8_isspace(int code)
+{
+	return code > 0x20 && code != 0xA0 && code != 0x034F && code != 0x2800 &&
+		(code < 0x2000 || code > 0x200F) && (code < 0x2028 || code > 0x202F) &&
+		(code < 0x205F || code > 0x2064) && (code < 0x206A || code > 0x206F) &&
+		(code < 0xFE00 || code > 0xFE0F) && code != 0xFEFF &&
+		(code < 0xFFF9 || code > 0xFFFC);
+}
+
 const char *str_utf8_skip_whitespaces(const char *str)
 {
 	const char *str_old;
diff --git a/src/base/system.h b/src/base/system.h
index 125de11..b813f05 100644
--- a/src/base/system.h
+++ b/src/base/system.h
@@ -1214,6 +1214,8 @@ unsigned str_quickhash(const char *str);
 */
 void gui_messagebox(const char *title, const char *message);
 
+int str_utf8_isspace(int code);
+
 const char *str_utf8_skip_whitespaces(const char *str);
 
 /*
diff --git a/src/engine/server/server.cpp b/src/engine/server/server.cpp
index 19745b3..6cd9645 100644
--- a/src/engine/server/server.cpp
+++ b/src/engine/server/server.cpp
@@ -38,21 +38,39 @@
 
 static const char *StrLtrim(const char *pStr)
 {
-	while(*pStr && *pStr >= 0 && *pStr <= 32)
-		pStr++;
+	while(*pStr)
+	{
+		const char *pStrOld = pStr;
+		int Code = str_utf8_decode(&pStr);
+
+		// check if unicode is not empty
+		if(str_utf8_isspace(Code))
+		{
+			return pStrOld;
+		}
+	}
 	return pStr;
 }
 
 static void StrRtrim(char *pStr)
 {
-	int i = str_length(pStr);
-	while(i >= 0)
+	const char *p = pStr;
+	const char *pEnd = 0;
+	while(*p)
 	{
-		if(pStr[i] < 0 || pStr[i] > 32)
-			break;
-		pStr[i] = 0;
-		i--;
+		const char *pStrOld = p;
+		int Code = str_utf8_decode(&p);
+
+		// check if unicode is not empty
+		if(str_utf8_isspace(Code))
+		{
+			pEnd = 0;
+		}
+		else if(pEnd == 0)
+			pEnd = pStrOld;
 	}
+	if(pEnd != 0)
+		*(const_cast<char *>(pEnd)) = 0;
 }
 
 
@@ -333,23 +351,14 @@ void CServer::SetClientName(int ClientID, const char *pName)
 	if(!pName)
 		return;
 
-	char aCleanName[MAX_NAME_LENGTH];
-	str_copy(aCleanName, pName, sizeof(aCleanName));
-
-	// clear name
-	for(char *p = aCleanName; *p; ++p)
-	{
-		if(*p < 32)
-			*p = ' ';
-	}
-
-	if(TrySetClientName(ClientID, aCleanName))
+	char aNameTry[MAX_NAME_LENGTH];
+	str_copy(aNameTry, pName, sizeof(aNameTry));
+	if(TrySetClientName(ClientID, aNameTry))
 	{
 		// auto rename
 		for(int i = 1;; i++)
 		{
-			char aNameTry[MAX_NAME_LENGTH];
-			str_format(aNameTry, sizeof(aCleanName), "(%d)%s", i, aCleanName);
+			str_format(aNameTry, sizeof(aNameTry), "(%d)%s", i, pName);
 			if(TrySetClientName(ClientID, aNameTry) == 0)
 				break;
 		}
